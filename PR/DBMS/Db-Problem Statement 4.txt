Problem Statement 4 

Create following collections and Perform Mongodb CRUD Operations.
Teachers (Tname, dno, dname, experience, salary, date_of_joining )
Students(Sname, roll_no, class)
1. Find the information about all teachers alphabetically.
2. Find the information about all teachers of the computer department
3. Find the information about all teachers of computer,IT,and e&TC department
4. Find the information about all teachers of computer,IT,and E&TC department having
salary greater than or equal to 10000/-
6. Find the student information having roll_no = 2 or Sname=xyz
7. Update the experience of teacher-praveen to 10 years, if the entry is not available in
database consider the entry as new entry.
9. Update the department of all the teachers working in IT department to COMP
10. find the teacher's name and their experience from teachers’ collection
11. Delete all the documents from teacher's collection having IT dept.
12. display with pretty() method, the first 3 documents in teacher's collection in ascending
order

#PROGRAM
// Create 'Teachers' collection and insert documents
db.Teachers.insertMany([
    { Tname: "John Doe", dno: 101, dname: "Computer", experience: 8, salary: 12000, date_of_joining: "2020-01-01" },
    { Tname: "Jane Smith", dno: 102, dname: "IT", experience: 6, salary: 11000, date_of_joining: "2019-06-15" },
    { Tname: "Michael Johnson", dno: 103, dname: "E&TC", experience: 9, salary: 13000, date_of_joining: "2021-03-20" }
]);

// Create 'Students' collection and insert documents
db.Students.insertMany([
    { Sname: "Alice", roll_no: 1, class: "A" },
    { Sname: "Bob", roll_no: 2, class: "B" },
    { Sname: "Eve", roll_no: 3, class: "A" }
]);

// 1. Find the information about all teachers alphabetically.
db.Teachers.find().sort({ Tname: 1 });

// 2. Find the information about all teachers of the computer department
db.Teachers.find({ dname: "Computer" });

// 3. Find the information about all teachers of computer, IT, and E&TC department
db.Teachers.find({ dname: { $in: ["Computer", "IT", "E&TC"] } });

// 4. Find the information about all teachers of computer, IT, and E&TC department having salary greater than or equal to 10000/-
db.Teachers.find({ dname: { $in: ["Computer", "IT", "E&TC"] }, salary: { $gte: 10000 } });

// 6. Find the student information having roll_no = 2 or Sname=xyz
db.Students.find({ $or: [{ roll_no: 2 }, { Sname: "xyz" }] });

// 7. Update the experience of teacher-praveen to 10 years, if the entry is not available in the database consider the entry as a new entry.
db.Teachers.updateOne({ Tname: "Praveen" }, { $set: { experience: 10 } }, { upsert: true });

// 9. Update the department of all the teachers working in the IT department to COMP
db.Teachers.updateMany({ dname: "IT" }, { $set: { dname: "COMP" } });

// 10. Find the teacher's name and their experience from the teachers’ collection
db.Teachers.find({}, { Tname: 1, experience: 1 });

// 11. Delete all the documents from the teacher's collection having IT dept.
db.Teachers.deleteMany({ dname: "IT" });

// 12. Display with pretty() method, the first 3 documents in the teacher's collection in ascending order
db.Teachers.find().sort({ _id: 1 }).limit(3).pretty();
